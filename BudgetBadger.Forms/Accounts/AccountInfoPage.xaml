<?xml version="1.0" encoding="UTF-8" ?>
<p:BasePage
    x:Class="BudgetBadger.Forms.Accounts.AccountInfoPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:comparers="clr-namespace:BudgetBadger.Forms.Comparers"
    xmlns:dt="clr-namespace:BudgetBadger.Forms.DataTemplates"
    xmlns:ext="clr-namespace:BudgetBadger.Forms.Extensions"
    xmlns:p="clr-namespace:BudgetBadger.Forms.Pages"
    xmlns:uc="clr-namespace:BudgetBadger.Forms.UserControls"
    xmlns:system="clr-namespace:System;assembly=netstandard"
    x:Name="this">
    <p:BasePage.Header>
        <p:ChildSearchHeader
            BackCommand="{Binding BackCommand}"
            PageTitle="{Binding Account.Description}"
            SearchText="{Binding SearchText}"
            ToolbarItemCommand="{Binding EditCommand}"
            ToolbarItemIcon="{StaticResource EditIcon}" />
    </p:BasePage.Header>
    <p:BasePage.Body>
        <uc:ResponsiveGrid x:Name="responsiveGrid" RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{ext:DynamicResource Key=size_25,Converter={StaticResource DoubleToGridLengthConverter}}" />
                <RowDefinition Height="*" />
                <RowDefinition Height="{ext:DynamicResource Key=size_600,Converter={StaticResource DoubleToGridLengthConverter}}" />
            </Grid.RowDefinitions>
            <StackLayout
                Margin="0"
                Padding="0"
                Spacing="0"
                Grid.Row="0"
                Grid.ColumnSpan="12"
                VerticalOptions="Start">
                <FlexLayout
                    IsVisible="{OnIdiom Default=True, Phone=False}"
                    Direction="Row"
                    Wrap="Wrap"
                    JustifyContent="SpaceEvenly"
                    AlignContent="Center"
                    AlignItems="Center"
                    Margin="{Binding Gutter, Source={x:Reference responsiveGrid}, Converter={StaticResource DoubleToLeftRightThicknessConverter}}">
                    <StackLayout
                        Margin="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}"
                        HeightRequest="{ext:DynamicResource size_800}"
                        Spacing="{ext:DynamicResource size_40}"
                        Orientation="Vertical">
                        <Label
                            Style="{StaticResource PageHeaderPrimaryLabelStyle}"
                            Text="{Binding Account.Balance, Converter={StaticResource CurrencyConverter}}"/>
                        <Label
                            Style="{StaticResource PageHeaderSecondaryLabelStyle}"
                            Text="{ext:Translate AccountBalanceLabel}"/>
                    </StackLayout>
                    <StackLayout
                        Margin="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}"
                        Spacing="{ext:DynamicResource size_40}"
                        HeightRequest="{ext:DynamicResource size_800}"
                        Orientation="Vertical">
                        <Label
                            Style="{StaticResource PageSubheaderPrimaryLabelStyle}"
                            Text="{Binding PendingTotal, Converter={StaticResource CurrencyConverter}}"/>
                        <Label
                            Style="{StaticResource PageSubheaderSecondaryLabelStyle}"
                            Text="{ext:Translate AccountPendingLabel}"/>
                    </StackLayout>
                    <StackLayout
                        Margin="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}"
                        Spacing="{ext:DynamicResource size_40}"
                        HeightRequest="{ext:DynamicResource size_800}"
                        Orientation="Vertical">
                        <Label
                            Style="{StaticResource PageSubheaderPrimaryLabelStyle}"
                            Text="{Binding PostedTotal, Converter={StaticResource CurrencyConverter}}"/>
                        <Label
                            Style="{StaticResource PageSubheaderSecondaryLabelStyle}"
                            Text="{ext:Translate AccountPostedLabel}"/>
                    </StackLayout>
                    <StackLayout
                        Margin="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}"
                        Spacing="{ext:DynamicResource size_40}"
                        HeightRequest="{ext:DynamicResource size_800}"
                        Orientation="Vertical">
                        <Label
                            Style="{StaticResource PageSubheaderPrimaryLabelStyle}">
                            <Label.Triggers>
                                <DataTrigger
                                    Binding="{Binding Account.PaymentRequired}"
                                    TargetType="Label"
                                    Value="false">
                                    <Setter Property="Text" Value="{ext:Translate AccountPaymentNotNeededLabel}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding Account.PaymentRequired}"
                                    TargetType="Label"
                                    Value="true">
                                    <Setter Property="Text" Value="{Binding Account.Payment, Converter={StaticResource CurrencyConverter}}" />
                                    <Setter Property="TextColor" Value="{ext:DynamicResource brand_600}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Label
                            Style="{StaticResource PageSubheaderSecondaryLabelStyle}"
                            Text="{ext:Translate AccountPaymentLabel}">
                            <Label.Triggers>
                                <DataTrigger
                                    Binding="{Binding Account.PaymentRequired}"
                                    TargetType="Label"
                                    Value="true">
                                    <Setter Property="TextColor" Value="{ext:DynamicResource brand_600}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </StackLayout>
                </FlexLayout>
                <uc:Accordion
                    IsVisible="{OnIdiom Default=False, Phone=True}"
                    Margin="{Binding Gutter, Source={x:Reference responsiveGrid}, Converter={StaticResource DoubleToLeftRightThicknessConverter}}">
                    <uc:Accordion.HeaderContent>
                        <StackLayout
                            HeightRequest="{ext:DynamicResource size_600}"
                            Spacing="{ext:DynamicResource size_100}"
                            Orientation="Horizontal">
                            <Label
                                Style="{StaticResource MobilePageHeaderPrimaryLabelStyle}"
                                Text="{Binding Account.Balance, Converter={StaticResource CurrencyConverter}}"/>
                            <Label
                                Style="{StaticResource MobilePageHeaderSecondaryLabelStyle}"
                                Text="{ext:Translate AccountBalanceLabel}"/>
                        </StackLayout>
                    </uc:Accordion.HeaderContent>
                    <uc:Accordion.BodyContent>
                        <StackLayout VerticalOptions="Center" Margin="0" Padding="0" Spacing="0">
                        <FlexLayout VerticalOptions="Center" Direction="Row" Wrap="Wrap" JustifyContent="SpaceEvenly">
                            <StackLayout
                                Margin="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}"
                                Spacing="{ext:DynamicResource size_40}"
                                HeightRequest="{ext:DynamicResource size_600}"
                                Orientation="Vertical">
                                <Label
                                    Style="{StaticResource MobilePageSubheaderPrimaryLabelStyle}"
                                    Text="{Binding PendingTotal, Converter={StaticResource CurrencyConverter}}"/>
                                <Label
                                    Style="{StaticResource MobilePageSubheaderSecondaryLabelStyle}"
                                    Text="{ext:Translate AccountPendingLabel}"/>
                            </StackLayout>
                            <StackLayout
                                Margin="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}"
                                Spacing="{ext:DynamicResource size_40}"
                                HeightRequest="{ext:DynamicResource size_600}"
                                Orientation="Vertical">
                                <Label
                                    Style="{StaticResource MobilePageSubheaderPrimaryLabelStyle}"
                                    Text="{Binding PostedTotal, Converter={StaticResource CurrencyConverter}}"/>
                                <Label
                                    Style="{StaticResource MobilePageSubheaderSecondaryLabelStyle}"
                                    Text="{ext:Translate AccountPostedLabel}"/>
                            </StackLayout>
                            <uc:ContentButton
                                Command="{Binding PaymentCommand}"
                                Style="{ext:DynamicResource AccountPaymentButtonStyle}"
                                HeightRequest="{ext:DynamicResource size_600}"
                                Padding="{ext:Thickness LeftKey=size_100, TopKey=size_0, RightKey=size_100,BottomKey=size_0}">
                                <StackLayout
                                    Spacing="{ext:DynamicResource size_40}"
                                    Orientation="Vertical">
                                    <Label
                                        Style="{StaticResource MobilePageSubheaderPrimaryLabelStyle}">
                                        <Label.Triggers>
                                            <DataTrigger
                                                Binding="{Binding Account.PaymentRequired}"
                                                TargetType="Label"
                                                Value="false">
                                                <Setter Property="Text" Value="{ext:Translate AccountPaymentNotNeededLabel}" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding Account.PaymentRequired}"
                                                TargetType="Label"
                                                Value="true">
                                                <Setter Property="Text" Value="{Binding Account.Payment, Converter={StaticResource CurrencyConverter}}" />
                                                <Setter Property="TextColor" Value="{ext:DynamicResource brand_600}" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                    <Label
                                        Style="{StaticResource MobilePageSubheaderSecondaryLabelStyle}"
                                        Text="{ext:Translate AccountPaymentLabel}">
                                        <Label.Triggers>
                                            <DataTrigger
                                                Binding="{Binding Account.PaymentRequired}"
                                                TargetType="Label"
                                                Value="true">
                                                <Setter Property="TextColor" Value="{ext:DynamicResource brand_600}" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                </StackLayout>
                            </uc:ContentButton>
                        </FlexLayout>
                        </StackLayout>
                    </uc:Accordion.BodyContent>
                </uc:Accordion>
            </StackLayout>
            <BoxView
                Grid.Row="1"
                Grid.ColumnSpan="12"
                Style="{ext:DynamicResource MediumDividerStyle}"
                HeightRequest="{ext:DynamicResource size_25}"
                Margin="{Binding Gutter, Source={x:Reference responsiveGrid}, Converter={StaticResource DoubleToLeftRightThicknessConverter}}"/>
            <uc:EmptyState
                Title="{ext:Translate EmptyTransactionsHelperTitle}"
                Grid.Row="2"
                Grid.RowSpan="2"
                Grid.ColumnSpan="12"
                Icon="{ext:DynamicResource TransactionIcon}"
                ShowHelper="{Binding NoTransactions}">
                <uc:PullToRefresh
                    IsBusy="{Binding IsBusy}"
                    RefreshCommand="{Binding RefreshCommand}">
                    <uc:PullToRefresh.PullableContent>
                        <uc:ListView2
                            Items="{Binding Transactions}"
                            IsGrouped="True"
                            GroupPropertyDescription="ServiceDate"
                            IsSorted="False"
                            HasUnevenRows="True"
                            SearchFilter="{Binding Filter}"
                            SearchText="{Binding SearchText}"
                            HideSearchBar="True"
                            SelectedCommand="{Binding TransactionSelectedCommand}"
                            SelectedItem="{Binding SelectedTransaction}"
                            SeparatorVisibility="None">
                            <uc:ListView2.SortComparer>
                                <comparers:TransactionComparer/>
                            </uc:ListView2.SortComparer>
                            <uc:ListView2.GroupHeaderTemplate>
                                <DataTemplate>
                                    <uc:ViewCell
                                        HeightRequest="{ext:DynamicResource size_500}"
                                        BackgroundColor="{ext:DynamicResource gray_50}"
                                        Padding="{Binding Gutter, Source={x:Reference responsiveGrid}, Converter={StaticResource DoubleToLeftRightThicknessConverter}}">
                                        <dt:TransactionGroupHeaderViewCell HeightRequest="{ext:DynamicResource size_500}"/>
                                    </uc:ViewCell>
                                </DataTemplate>
                            </uc:ListView2.GroupHeaderTemplate>
                            <uc:ListView2.ItemTemplate>
                                <DataTemplate>
                                    <uc:SelectableViewCell
                                        HeightRequest="{ext:DynamicResource size_675}"
                                        BackgroundColor="{ext:DynamicResource gray_50}"
                                        SelectedBackgroundColor="{ext:DynamicResource brand_100}"
                                        Padding="{Binding Gutter, Source={x:Reference responsiveGrid}, Converter={StaticResource DoubleToLeftRightThicknessConverter}}">
                                        <dt:TransactionViewCell
                                            TransactionViewCellType="Account"
                                            ToggleCommand="{Binding BindingContext.TogglePostedTransactionCommand, Source={x:Reference Name=this}}"
                                            HeightRequest="{ext:DynamicResource size_675}"/>
                                        <uc:SelectableViewCell.ContextActions>
                                            <MenuItem
                                                Text="{ext:Translate DeleteButton}"
                                                IsDestructive="True"
                                                Command="{Binding BindingContext.DeleteTransactionCommand, Source={x:Reference Name=this}}"
                                                CommandParameter="{Binding .}"/>
                                        </uc:SelectableViewCell.ContextActions>
                                    </uc:SelectableViewCell>
                                </DataTemplate>
                            </uc:ListView2.ItemTemplate>
                            <uc:ListView2.Footer>
                                <BoxView HeightRequest="{ext:DynamicResource size_600}"/>
                            </uc:ListView2.Footer>
                        </uc:ListView2>
                    </uc:PullToRefresh.PullableContent>
                </uc:PullToRefresh>
                <!--<uc:PullToRefresh IsBusy="{Binding IsBusy}" RefreshCommand="{Binding RefreshCommand}">
                    <uc:PullToRefresh.PullableContent>
                        <uc:ListView
                            AllowSwiping="true"
                            Filter="{Binding Filter}"
                            FilterText="{Binding SearchText}"
                            FooterSize="{StaticResource Key=FooterHiddenButtonHeight}"
                            GroupHeaderSize="{StaticResource DenseListGroupHeaderHeight}"
                            HasOtherTapGestureRecognizers="true"
                            IsBusy="{Binding IsBusy}"
                            ItemSize="{StaticResource ListDoubleItemHeight}"
                            ItemsSource="{Binding Transactions}"
                            SelectedCommand="{Binding TransactionSelectedCommand}"
                            SelectedItem="{Binding SelectedTransaction}">
                            <syncfusion:SfListView.RightSwipeTemplate>
                                <DataTemplate>
                                    <ContentView BackgroundColor="{StaticResource DataGridContextActionDestructionBackgroundColor}">
                                        <ContentView.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding BindingContext.DeleteTransactionCommand, Source={x:Reference Name=this}}" CommandParameter="{Binding .}" />
                                        </ContentView.GestureRecognizers>
                                        <Image
                                            HeightRequest="24"
                                            WidthRequest="24"
                                            HorizontalOptions="Center"
                                            VerticalOptions="Center">
                                            <Image.Source>
                                                <FontImageSource
                                                    Size="24"
                                                    Color="{StaticResource DataGridContextActionTextColor}"
                                                    FontFamily="{ext:DynamicResource Key=IconFontFamily}"
                                                    Glyph="{ext:DynamicResource Key=DeleteIcon}" />
                                            </Image.Source>
                                        </Image>
                                    </ContentView>
                                </DataTemplate>
                            </syncfusion:SfListView.RightSwipeTemplate>
                            <syncfusion:SfListView.DataSource>
                                <data:DataSource>
                                    <data:DataSource.GroupDescriptors>
                                        <data:GroupDescriptor PropertyName="ServiceDate" />
                                    </data:DataSource.GroupDescriptors>
                                </data:DataSource>
                            </syncfusion:SfListView.DataSource>
                            <syncfusion:SfListView.GroupHeaderTemplate>
                                <DataTemplate>
                                    <ContentView x:Name="denseGroupHeaderCell" HeightRequest="{StaticResource Key=DenseListGroupHeaderHeight}">
                                        <Label
                                            Margin="16,12,16,0"
                                            Style="{StaticResource Key=DenseListGroupHeaderLabelStyle}"
                                            Text="{Binding Key, Converter={StaticResource ShortDateConverter}}" />
                                    </ContentView>
                                </DataTemplate>
                            </syncfusion:SfListView.GroupHeaderTemplate>
                            <syncfusion:SfListView.ItemTemplate>
                                <DataTemplate>
                                    <dt:TransactionViewCell
                                        SelectedCommand="{Binding BindingContext.TransactionSelectedCommand, Source={x:Reference Name=this}}"
                                        ToggleCommand="{Binding BindingContext.TogglePostedTransactionCommand, Source={x:Reference Name=this}}"
                                        TransactionViewCellType="Account" />
                                </DataTemplate>
                            </syncfusion:SfListView.ItemTemplate>
                            <syncfusion:SfListView.FooterTemplate>
                                <DataTemplate>
                                    <BoxView />
                                </DataTemplate>
                            </syncfusion:SfListView.FooterTemplate>
                        </uc:ListView>
                    </uc:PullToRefresh.PullableContent>
                </uc:PullToRefresh>-->
            </uc:EmptyState>
            <FlexLayout
                Grid.Row="3"
                Grid.Column="0"
                Grid.ColumnSpan="12"
                Direction="Row"
                AlignItems="Center"
                JustifyContent="End"
                Margin="{Binding Gutter, Source={x:Reference responsiveGrid}, Converter={StaticResource DoubleToLeftRightThicknessConverter}}">
                <uc:Button2
                    Command="{Binding ReconcileCommand}"
                    Style="{StaticResource SecondaryActionButtonStyle}"
                    Text="{ext:Translate ReconcileAccountButton}"
                    FlexLayout.Grow="{OnIdiom Default=0, Phone=1}"/>
                <BoxView WidthRequest="{ext:DynamicResource size_200}"/>
                <uc:Button2
                    Command="{Binding AddTransactionCommand}"
                    Style="{StaticResource PrimaryActionButtonStyle}"
                    Text="{ext:Translate AddTransactionButton}"
                    FlexLayout.Grow="{OnIdiom Default=0, Phone=1}"/>
            </FlexLayout>
        </uc:ResponsiveGrid>
    </p:BasePage.Body>
</p:BasePage>
