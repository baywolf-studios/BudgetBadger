trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

variables:
- group: budgetbadger_variables

steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'AppSecrets.cs'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)\BudgetBadger.Forms'
    
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: DownloadSecureFile@1
  name: signingCert
  displayName: 'Download CA certificate'
  inputs:
    secureFile: 'BudgetBadger.UWP_StoreKey.pfx'

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '**/*UWP.csproj'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="x86|x64|ARM" /p:AppxPackageDir="$(Build.BinariesDirectory)\AppxPackages\\" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="" /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.BinariesDirectory)'
    Contents: 'AppxPackages\*.appxupload'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'BudgetBadger.UWP'
    publishLocation: 'pipeline'
