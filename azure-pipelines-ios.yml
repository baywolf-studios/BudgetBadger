trigger: none
pr: none

pool:
  vmImage: 'macos-latest'

variables:
- group: budgetbadger_variables

steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'AppSecrets.cs'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)/BudgetBadger.Forms'
    
- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(mono_version)
  displayName: 'Select the Xamarin SDK version'
  enabled: true
  
- bash: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
  displayName: 'Select Xcode version'
  enabled: true

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'ios_distribution_cert.p12'
    certPwd: '$(ios_distribution_cert_password)'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'Budget_Badger_AppStore.mobileprovision'

- task: XamariniOS@2
  inputs:
    solutionFile: '**/*iOS.csproj'
    configuration: 'Release'
    packageApp: true
    args: /p:IpaPackageDir="$(Build.BinariesDirectory)"

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.BinariesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'BudgetBadger.iOS'
    publishLocation: 'pipeline'
