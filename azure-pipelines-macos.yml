trigger:
- master

pool:
  vmImage: 'macos-latest'

variables:
- group: budgetbadger_variables

steps:
- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(mono_version)
  displayName: 'Select the Xamarin SDK version'
  enabled: true
  
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'mac_distribution_cert.p12'
    certPwd: '$(mac_distribution_cert_password)'
    keychain: 'temp'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'mac_installer_distribution_cert.p12'
    certPwd: '$(mac_distribution_cert_password)'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'Budget_Badger_Mac_AppStore.provisionprofile'


- task: MSBuild@1
  inputs:
    solution: '**/*macOS.csproj'
    configuration: 'Release'
    msbuildArguments: '/p:Configuration=Release /p:Platform=AnyCPU'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'BudgetBadger.macOS/bin/Release/*.pkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'BudgetBadger.macOS'
    publishLocation: 'pipeline'
